# Build Test Action
# -----------------
# - Builds the app as debug to test if it compiles
#   Runs on ubuntu-latest
#   Runs the command "yarn tauri build --bundle none"
#   Runs on every Push to the main branch

name: PR Build Test

on:
    pull_request:
    push:
        branches: [main]

jobs:
    test:
        strategy:
            fail-fast: false
            matrix:
                platform: [ubuntu-20.04]

        runs-on: ${{ matrix.platform }}
        steps:
            - uses: actions/checkout@v3
            - name: Setup node
              uses: actions/setup-node@v3
              with:
                  node-version: 20
            - name: Install Rust stable
              uses: dtolnay/rust-toolchain@stable
            - name: Install dependencies
              if: matrix.platform == 'ubuntu-20.04'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
            - name: Install node deps
              if: steps.cache-node.outputs.cache-hit != 'true'
              run: npm i

            - name: Run svelte-check
              run: npm run check

            - name: Install rust deps
              if: steps.cache-rust.outputs.cache-hit != 'true'
              run: |
                  cd src-tauri
                  cargo check --no-default-features
                  cd ..

            - name: Run tests on Rust
              run: npm run rust:test

            - name: Cache the rust crates
              id: cache-rust
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      src-tauri/target/
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

            - name: Get npm cache directory
              id: npm-cache-dir
              shell: bash
              run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

            - name: Cache the node packages
              id: cache-node
              uses: actions/cache@v3
              with:
                  path: ${{ steps.npm-cache-dir.outputs.dir }}
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-
